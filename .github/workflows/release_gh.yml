name: Release to GitHub

on:
  workflow_run:
    workflows: [ Build ]
    types: [ completed ]
    branches: [ master ]

jobs:
  release:
    name: Create Github Release
    if: github.event.workflow_run.event == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "dist"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/dist.zip`, Buffer.from(download.data));

      - name: 'Unzip artifact'
        run: unzip dist.zip

      - name: Set Release Variables
        run: |
          echo "VERSIONED_NAME=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.name} ${project.version}' --non-recursive exec:exec)" >> "$GITHUB_ENV"
          versions_note=$(printf "## Supported Minecraft versions\n%s\n\n" "$(. ./scripts/get_pretty_spigot_versions.sh)")
          printf "MINECRAFT_VERSIONS_NOTE<<EOF\n%s\nEOF\n" "$versions_note" >> "$GITHUB_ENV"

      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@v0.1.14
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.VERSIONED_NAME }}
          body: ${{ env.MINECRAFT_VERSIONS_NOTE }}
          draft: true
          prerelease: false
          files: OpenInv.jar
